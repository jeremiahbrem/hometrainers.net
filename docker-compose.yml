version: "3.8"
services:
  backend:
    container_name: backend
    depends_on: [auth, db]
    volumes:
      - "./backend:/app"
    build:
      context: ./backend
    ports:
      - 8080:8080
    environment:
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - BACKEND_REDIRECT_URL=http://host.docker.internal:3000/api/auth/callback/auth
      - AUTH_SERVER_URL=http://host.docker.internal:9096
    extra_hosts:
      - "host.docker.internal:host-gateway"
  auth:
    container_name: auth
    volumes:
      - "./auth:/app"
    build:
      context: ./auth
    ports:
      - 9096:9096
    depends_on:
      db:
        condition: service_healthy
    environment:
      - REDIRECT_URL=http://host.docker.internal:3000
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Password123
      - POSTGRES_NAME=hptrainers
      - POSTGRES_HOST=db
    extra_hosts:
      - "host.docker.internal:host-gateway"
  cypress:
    image: cypress
    build:
      context: ./test
    container_name: cypress
    depends_on:
      - frontend
    command: npm run test
    environment:
      - NEXTAUTH_URL=http://host.docker.internal:3000
    extra_hosts:
      - "host.docker.internal:host-gateway"
  frontend:
    container_name: frontend
    depends_on: [backend, auth]
    stdin_open: true
    environment:
      - NEXT_PUBLIC_GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - NEXT_PUBLIC_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - NEXT_PUBLIC_API_URL=http://host.docker.internal:8080
      - NEXTAUTH_URL=http://host.docker.internal:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXT_PUBLIC_LOGIN_URL=http://host.docker.internal:8080/login
      - NEXT_PUBLIC_AUTH_SERVER=http://host.docker.internal:9096
      - ENVIRONMENT=DEV
    build:
      context: ./frontend
      target: runner
      args:
        - NEXT_PUBLIC_GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
        - NEXT_PUBLIC_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
        - NEXT_PUBLIC_API_URL=http://host.docker.internal:8080
        - NEXTAUTH_URL=http://host.docker.internal:3000
        - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
        - NEXT_PUBLIC_LOGIN_URL=http://host.docker.internal:8080/login
        - NEXT_PUBLIC_AUTH_SERVER=http://host.docker.internal:9096
        - ENVIRONMENT=DEV
    volumes:
      - "./frontend:/app"
    ports:
      - "3000:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  db:
    image: postgres:alpine
    container_name: db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Password123
      - POSTGRES_DB=hptrainers
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./sql:/sql
    healthcheck:
      test: ["CMD-SHELL", "sh -c pg_isready -U postgres -d hptrainers"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 30s

volumes:
  postgres-db:
    external: true
